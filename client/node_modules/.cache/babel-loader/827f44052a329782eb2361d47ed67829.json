{"ast":null,"code":"var _jsxFileName = \"/Users/kamransarif/Desktop/Billy/client/src/Component/Posts/CreatePosts.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setPostText } from '../../store/Dialogs/action';\nimport Posts from './Posts';\nimport './Posts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreatePosts() {\n  _s();\n\n  const [text, setText] = useState();\n  const [posts, setPost] = useState([]);\n  const nick = useSelector(state => state.registration.nick);\n  const ID = useSelector(state => state.registration.id);\n  const red = useSelector(state => state.Dialogs);\n  const dispatch = useDispatch();\n\n  function addPost() {\n    const newPost = {\n      id: ID,\n      value: text,\n      user: nick\n    };\n    setPost([...posts, newPost]);\n    setText('');\n    dispatch(setPostText([...posts, newPost]));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: event => setText(event.target.value),\n      placeholder: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"addPost\",\n      onClick: addPost,\n      children: \"\\u041E\\u043F\\u0443\\u0431\\u043B\\u0438\\u043A\\u043E\\u0432\\u0430\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Posts, {\n      posts: red.Dialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreatePosts, \"ORdty+kGljLQ+RPAPdQJM8tcs8s=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = CreatePosts;\nexport default CreatePosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePosts\");","map":{"version":3,"sources":["/Users/kamransarif/Desktop/Billy/client/src/Component/Posts/CreatePosts.jsx"],"names":["useState","useDispatch","useSelector","setPostText","Posts","CreatePosts","text","setText","posts","setPost","nick","state","registration","ID","id","red","Dialogs","dispatch","addPost","newPost","value","user","event","target","Dialog"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,aAAP;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;AACA,QAAM,CAACQ,KAAD,EAAQC,OAAR,IAAmBT,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAMU,IAAI,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,YAAN,CAAmBF,IAA/B,CAAxB;AACA,QAAMG,EAAE,GAAGX,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,YAAN,CAAmBE,EAA/B,CAAtB;AACA,QAAMC,GAAG,GAAGb,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACK,OAAlB,CAAvB;AACA,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;;AACA,WAASiB,OAAT,GAAmB;AACjB,UAAMC,OAAO,GAAG;AACdL,MAAAA,EAAE,EAAED,EADU;AAEdO,MAAAA,KAAK,EAAEd,IAFO;AAGde,MAAAA,IAAI,EAAEX;AAHQ,KAAhB;AAKAD,IAAAA,OAAO,CAAC,CAAC,GAAGD,KAAJ,EAAWW,OAAX,CAAD,CAAP;AACAZ,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAU,IAAAA,QAAQ,CAACd,WAAW,CAAC,CAAC,GAAGK,KAAJ,EAAWW,OAAX,CAAD,CAAZ,CAAR;AACD;;AACD,sBACE;AAAA,4BACE;AACE,MAAA,QAAQ,EAAGG,KAAD,IAAWf,OAAO,CAACe,KAAK,CAACC,MAAN,CAAaH,KAAd,CAD9B;AAEE,MAAA,WAAW,EAAC,wDAFd;AAGE,MAAA,KAAK,EAAEd;AAHT;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,SAAhC;AAA0C,MAAA,OAAO,EAAEY,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEH,GAAG,CAACS;AAAlB;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA5BQnB,W;UAGMH,W,EACFA,W,EACCA,W,EACKD,W;;;KANVI,W;AA4BP,eAAeA,WAAf","sourcesContent":["import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setPostText } from '../../store/Dialogs/action';\nimport Posts from './Posts';\nimport './Posts.css';\n\nfunction CreatePosts() {\n  const [text, setText] = useState();\n  const [posts, setPost] = useState([]);\n  const nick = useSelector((state) => state.registration.nick);\n  const ID = useSelector((state) => state.registration.id);\n  const red = useSelector((state) => state.Dialogs);\n  const dispatch = useDispatch();\n  function addPost() {\n    const newPost = {\n      id: ID,\n      value: text,\n      user: nick,\n    };\n    setPost([...posts, newPost]);\n    setText('');\n    dispatch(setPostText([...posts, newPost]));\n  }\n  return (\n    <div>\n      <textarea\n        onChange={(event) => setText(event.target.value)}\n        placeholder=\"Сообщение\"\n        value={text}\n      />\n      <button type=\"button\" className=\"addPost\" onClick={addPost}>Опубликовать</button>\n      <Posts posts={red.Dialog} />\n    </div>\n  );\n} export default CreatePosts;\n"]},"metadata":{},"sourceType":"module"}